# BabylonJS Gaussian Splats Viewer

A web-based viewer for Gaussian Splatting models (.splat, .ply, .spz) built with Babylon.js. Features include a customizable camera, UI controls for settings and performance, mobile optimizations, and developer tools.

## Features

*   Loads `.splat`, `.ply`, and `.spz` Gaussian Splatting models.
*   Orbit, Pan, and Zoom camera controls (optimized for both desktop and mobile).
*   Double-click/Double-tap to focus on a point.
*   Configurable camera behavior (auto-rotation, sensitivity, limits).
*   Performance controls via adjustable Hardware Scaling Level and Post-Processing toggles (Sharpen, FXAA).
*   UI Panel with sections for Settings, Controls Info, and Developer Tools.
*   Load models via file upload or URL within the UI.
*   **NEW:** Drag-and-drop support for model files onto the canvas.
*   **NEW:** Tunable Sharpen filter intensity in the UI.
*   **NEW:** Improved touch gesture smoothing with configurable sensitivity.
*   Responsive design for various screen sizes.
*   Basic performance metrics (FPS, Resolution, Vertices).
*   Sharing feature via URL parameters.
*   (Optional) WebXR integration readiness.
*   Accessibility considerations (high contrast, reduced motion).

## Getting Started

### Prerequisites

*   A modern web browser with WebGL2 support.
*   Node.js and npm (or yarn) to serve the files locally (necessary for file loading due to security restrictions).

### Setup and Running

1.  **Clone the repository:**
    ```bash
    git clone <repository_url>
    cd <repository_directory>
    ```
2.  **Install a simple static file server (if you don't have one):**
    ```bash
    npm install -g serve
    ```
    or
    ```bash
    yarn global add serve
    ```
3.  **Serve the files:** Navigate to the project root directory (where `index.html` is located) in your terminal and run:
    ```bash
    serve .
    ```
4.  Open your browser and go to the address provided by the `serve` command (usually `http://localhost:5000`).

The application should load the default model specified in `js/config.js`.

## Project Structure

*   `css/`
    *   `styles.css`: Contains all CSS for the UI and layout, using custom properties for theming.
*   `js/`
    *   `main.js`: Entry point. Initializes the Babylon.js engine, scene, camera, UI, and loads the initial model.
    *   `config.js`: Centralized configuration object for various parameters (camera, UI, post-processing, etc.).
    *   `cameraControl.js`: Logic for setting up and animating the Babylon.js ArcRotateCamera.
    *   `gestureControl.js`: Custom touch gesture handling logic for mobile devices, including pinch and pan with smoothing.
    *   `mobileControl.js`: Detects mobile devices and applies mobile-specific camera settings and initializes `GestureControl`.
    *   `modelLoader.js`: Handles loading and disposing of Gaussian Splatting models (`.splat`, `.ply`, `.spz`) and fallback meshes.
    *   `ui.js`: Contains the logic for creating, displaying, and handling interactions for the control panel UI elements.
    *   `helpers.js`: Utility functions (e.g., setting mesh pickability, counting vertices, UI updates).
    *   `picking.js`: Streamlined function for picking objects in the scene.
    *   `postProcessing.js`: Adds and configures post-processing effects (Sharpen, FXAA).
    *   `setupXR.js`: (Placeholder) Intended for WebXR setup logic.

## Configuration

Most tunable parameters are located in `js/config.js`. You can adjust camera sensitivity, auto-rotation, post-processing settings, default model URL, pixel ratios, and more here.

```javascript
// js/config.js
export const CONFIG = {
    defaultModelUrl: "...",
    camera: {
        // ... camera parameters
        upperRadiusLimit: 7.0, // Max zoom out
        lowerRadiusLimit: 2.0, // Min zoom in
        // ... other params
    },
    mobile: {
        // ... mobile specific camera overrides
    },
    gesture: {
        // ... gesture timings and thresholds
        smoothingFactorDefault: 0.2, // Default smoothing factor for EMA (lower = more smooth)
        smoothingFactorRange: { min: 0.1, max: 0.9, step: 0.05 }, // Range for UI slider mapping
        // ... other params
    },
    engine: {
        antialias: false, // Controlled by FXAA post-process
        // ... other params
    },
    postProcessing: {
        sharpenEnabled: true,
        sharpen: { // Sharpen filter parameters
            edgeAmount: 0.62, // Default edge amount
            minEdgeAmount: 0.0,
            maxEdgeAmount: 2.0,
            stepEdgeAmount: 0.01
        },
        fxaaEnabled: true,
        // FXAA generally has few tunable parameters directly exposed in Babylon.js DefaultRenderingPipeline
    },
    modelLoader: {
        supportedFormats: ['splat', 'ply', 'spz'],
        defaultFallbackModel: "...",
        defaultModelScale: 1.0,
    },
    ui: {
        updateFrequency: 450, // ms
        touchSensitivity: { // UI Slider range for touch controls
            min: 1,
            max: 10,
            step: 0.5,
            default: 5
        }
    }
    // ... other config sections
};